$date
	Sat Oct  5 12:09:06 2024
$end
$version
	Icarus Verilog
$end
$timescale
	1ps
$end
$scope module data_memory $end
$var wire 12 ! addr_i [11:0] $end
$var wire 1 " clk_i $end
$var wire 32 # read_data_o [31:0] $end
$var wire 1 $ read_enable_i $end
$var wire 1 % reset_i $end
$var wire 32 & write_data_i [31:0] $end
$var wire 1 ' write_enable_i $end
$var wire 4 ( write_mask_i [3:0] $end
$var wire 10 ) word_addr [9:0] $end
$var wire 32 * ram_read_data_l [31:0] $end
$var parameter 2 + IDLE $end
$var parameter 2 , READ $end
$var parameter 2 - WRITE $end
$var parameter 32 . depth_p $end
$var parameter 0 / init_file $end
$var parameter 32 0 width_p $end
$var reg 1 1 busy_o $end
$var reg 32 2 pending_write_data_l [31:0] $end
$var reg 4 3 pending_write_mask_l [3:0] $end
$var reg 32 4 ram_write_data_l [31:0] $end
$var reg 1 5 ram_write_enable_l $end
$var reg 2 6 write_state_l [1:0] $end
$scope module data_ram $end
$var wire 1 " clk_i $end
$var wire 10 7 rd_addr_i [9:0] $end
$var wire 1 8 rd_valid_i $end
$var wire 1 % reset_i $end
$var wire 10 9 wr_addr_i [9:0] $end
$var wire 32 : wr_data_i [31:0] $end
$var wire 1 5 wr_valid_i $end
$var wire 32 ; rd_data_o [31:0] $end
$var parameter 32 < depth_p $end
$var parameter 32 = width_p $end
$var reg 32 > rd_data_r [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b100000 =
b10000000000 <
b100000 0
b /
b10000000000 .
b10 -
b1 ,
b0 +
$end
#0
$dumpvars
b0 >
b0 ;
bx :
bz 9
x8
bz 7
b0 6
x5
bx 4
b0 3
b0 2
01
b0 *
bz )
bz (
z'
bz &
1%
z$
b0 #
1"
bz !
$end
#5000
0"
#10000
0%
1"
#15000
0"
#20000
b1000000 )
b1000000 7
b1000000 9
b1111 (
b11011110101011011011111011101111 &
1'
b100000000 !
05
1"
#25000
0"
#30000
18
1$
0'
15
b11011110101011011011111011101111 4
b11011110101011011011111011101111 :
1"
#35000
0"
#40000
bx #
bx *
bx ;
bx >
05
1"
#45000
0"
#45001
b0 #
b0 *
b0 ;
b0 >
1"
1%
#50001
0"
#55001
0%
1"
#60001
0"
#65001
b10000000 )
b10000000 7
b10000000 9
b1 (
b10101010 &
1'
b1000000000 !
b11011110101011011011111011101111 #
b11011110101011011011111011101111 *
b11011110101011011011111011101111 ;
b11011110101011011011111011101111 >
1"
#70001
0"
#75001
b10 (
b1011101100000000 &
b1000000001 !
bx #
bx *
bx ;
bx >
11
b1 3
b10101010 2
b1 6
1"
#80001
0"
#85001
b10 6
1"
#90001
0"
#95001
01
15
bx10101010 4
bx10101010 :
b0 6
1"
#100001
0"
#105001
b100 (
b110011000000000000000000 &
b1000000010 !
11
b10 3
b1011101100000000 2
b1 6
1"
#110001
0"
#115001
bx10101010 #
bx10101010 *
bx10101010 ;
bx10101010 >
b10 6
1"
#120001
0"
#125001
01
bx1011101110101010 4
bx1011101110101010 :
b0 6
1"
#130001
0"
#135001
b1000 (
b11011101000000000000000000000000 &
b1000000011 !
11
b100 3
b110011000000000000000000 2
b1 6
1"
#140001
0"
#145001
bx1011101110101010 #
bx1011101110101010 *
bx1011101110101010 ;
bx1011101110101010 >
b10 6
1"
#150001
0"
#155001
01
bx110011001011101110101010 4
bx110011001011101110101010 :
b0 6
1"
#160001
0"
#165001
b1000000000 !
0'
11
b1000 3
b11011101000000000000000000000000 2
b1 6
1"
#170001
0"
#175001
bx110011001011101110101010 #
bx110011001011101110101010 *
bx110011001011101110101010 ;
bx110011001011101110101010 >
b10 6
1"
#180001
0"
#180002
b0 #
b0 *
b0 ;
b0 >
01
b0 3
b0 2
b0 6
1"
1%
#185002
0"
#190002
0%
1"
#195002
0"
#200002
b11000000 )
b11000000 7
b11000000 9
b11 (
b1010101111001101 &
1'
b1100000000 !
bx110011001011101110101010 #
bx110011001011101110101010 *
bx110011001011101110101010 ;
bx110011001011101110101010 >
05
1"
#205002
0"
#210002
b1100 (
b11101111000000010000000000000000 &
b1100000010 !
bx #
bx *
bx ;
bx >
11
b11 3
b1010101111001101 2
b1 6
1"
#215002
0"
#220002
b10 6
1"
#225002
0"
#230002
01
15
bx1010101111001101 4
bx1010101111001101 :
b0 6
1"
#235002
0"
#240002
b1100000000 !
0'
11
b1100 3
b11101111000000010000000000000000 2
b1 6
1"
#245002
0"
#250002
bx1010101111001101 #
bx1010101111001101 *
bx1010101111001101 ;
bx1010101111001101 >
b10 6
1"
#255002
0"
#255003
b0 #
b0 *
b0 ;
b0 >
01
b0 3
b0 2
b0 6
1"
1%
#260003
0"
#265003
0%
1"
#270003
0"
#275003
b100000000 )
b100000000 7
b100000000 9
b1110 (
b10101010101110111100110011011101 &
1'
b10000000001 !
bx1010101111001101 #
bx1010101111001101 *
bx1010101111001101 ;
bx1010101111001101 >
05
1"
#280003
0"
#285003
b10000000000 !
0'
bx #
bx *
bx ;
bx >
11
b1110 3
b10101010101110111100110011011101 2
b1 6
1"
#290003
0"
#295003
b10 6
1"
#300003
0"
#300004
